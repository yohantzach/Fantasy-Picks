import { drizzle } from "drizzle-orm/node-postgres";
import pg from "pg";
import { users } from "./shared/schema.js";
import dotenv from "dotenv";

dotenv.config();

async function checkAllUsers() {
  if (!process.env.DATABASE_URL) {
    console.error("‚ùå DATABASE_URL not found in environment variables");
    process.exit(1);
  }

  const { Pool } = pg;
  
  // Create connection pool
  const pool = new Pool({
    connectionString: process.env.DATABASE_URL,
    ssl: process.env.NODE_ENV === "production" 
      ? { rejectUnauthorized: false } 
      : false,
  });

  const db = drizzle(pool, { schema: { users } });

  try {
    console.log("üîç Connecting to database...");
    
    // Query all users
    const allUsers = await db.select().from(users);
    
    console.log(`\nüìä Found ${allUsers.length} users in the database:\n`);
    
    if (allUsers.length === 0) {
      console.log("üö´ No users found in the database.");
    } else {
      // Display users in a formatted table
      console.log("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê");
      console.log("‚îÇ ID  ‚îÇ Email                        ‚îÇ Name                   ‚îÇ Admin   ‚îÇ Has Paid  ‚îÇ Created ‚îÇ");
      console.log("‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§");
      
      allUsers.forEach(user => {
        const id = String(user.id).padEnd(3);
        const email = String(user.email).padEnd(28);
        const name = String(user.name).padEnd(22);
        const isAdmin = user.isAdmin ? "   ‚úÖ   " : "   ‚ùå   ";
        const hasPaid = user.hasPaid ? "    ‚úÖ    " : "    ‚ùå    ";
        const created = new Date(user.createdAt).toLocaleDateString().padEnd(7);
        
        console.log(`‚îÇ ${id} ‚îÇ ${email} ‚îÇ ${name} ‚îÇ ${isAdmin} ‚îÇ ${hasPaid} ‚îÇ ${created} ‚îÇ`);
      });
      
      console.log("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò");
      
      // Summary statistics
      const adminCount = allUsers.filter(u => u.isAdmin).length;
      const paidCount = allUsers.filter(u => u.hasPaid).length;
      
      console.log(`\nüìà Statistics:`);
      console.log(`   ‚Ä¢ Total Users: ${allUsers.length}`);
      console.log(`   ‚Ä¢ Admin Users: ${adminCount}`);
      console.log(`   ‚Ä¢ Paid Users: ${paidCount}`);
      console.log(`   ‚Ä¢ Unpaid Users: ${allUsers.length - paidCount}`);
      
      // Show admin users specifically
      const adminUsers = allUsers.filter(u => u.isAdmin);
      if (adminUsers.length > 0) {
        console.log(`\nüëë Admin Users:`);
        adminUsers.forEach(admin => {
          console.log(`   ‚Ä¢ ${admin.name} (${admin.email}) - ID: ${admin.id}`);
        });
      }
      
      // Show recent users (last 5)
      const recentUsers = allUsers
        .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())
        .slice(0, 5);
        
      if (recentUsers.length > 0) {
        console.log(`\nüÜï Recent Users (Last ${Math.min(5, allUsers.length)}):`);
        recentUsers.forEach((user, index) => {
          const createdDate = new Date(user.createdAt).toLocaleDateString();
          console.log(`   ${index + 1}. ${user.name} (${user.email}) - ${createdDate}`);
        });
      }
    }
    
  } catch (error) {
    console.error("‚ùå Error querying database:", error);
    console.error("Details:", error.message);
  } finally {
    await pool.end();
    console.log("\n‚úÖ Database connection closed.");
  }
}

// Run the script
checkAllUsers().catch(console.error);
